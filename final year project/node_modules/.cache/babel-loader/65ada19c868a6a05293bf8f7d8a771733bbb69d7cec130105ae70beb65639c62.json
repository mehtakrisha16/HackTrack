{"ast":null,"code":"var _jsxFileName = \"D:\\\\FINAL\\\\final year project\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  savedEvents: [],\n  applications: [],\n  notifications: [],\n  filters: {\n    category: 'all',\n    location: 'all',\n    dateRange: 'all',\n    difficulty: 'all',\n    type: 'all'\n  },\n  searchQuery: '',\n  theme: 'light'\n};\n\n// Action types\nconst actionTypes = {\n  SET_LOADING: 'SET_LOADING',\n  SET_USER: 'SET_USER',\n  LOGOUT: 'LOGOUT',\n  SAVE_EVENT: 'SAVE_EVENT',\n  UNSAVE_EVENT: 'UNSAVE_EVENT',\n  ADD_APPLICATION: 'ADD_APPLICATION',\n  UPDATE_APPLICATION: 'UPDATE_APPLICATION',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  MARK_NOTIFICATION_READ: 'MARK_NOTIFICATION_READ',\n  SET_FILTERS: 'SET_FILTERS',\n  SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\n  SET_THEME: 'SET_THEME',\n  LOAD_FROM_STORAGE: 'LOAD_FROM_STORAGE'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false\n      };\n    case actionTypes.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        savedEvents: [],\n        applications: [],\n        notifications: []\n      };\n    case actionTypes.SAVE_EVENT:\n      const savedEvents = [...state.savedEvents, action.payload];\n      return {\n        ...state,\n        savedEvents\n      };\n    case actionTypes.UNSAVE_EVENT:\n      return {\n        ...state,\n        savedEvents: state.savedEvents.filter(event => event.id !== action.payload)\n      };\n    case actionTypes.ADD_APPLICATION:\n      const applications = [...state.applications, action.payload];\n      return {\n        ...state,\n        applications\n      };\n    case actionTypes.UPDATE_APPLICATION:\n      return {\n        ...state,\n        applications: state.applications.map(app => app.id === action.payload.id ? {\n          ...app,\n          ...action.payload.updates\n        } : app)\n      };\n    case actionTypes.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications]\n      };\n    case actionTypes.MARK_NOTIFICATION_READ:\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => notification.id === action.payload ? {\n          ...notification,\n          read: true\n        } : notification)\n      };\n    case actionTypes.SET_FILTERS:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.payload\n        }\n      };\n    case actionTypes.SET_SEARCH_QUERY:\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case actionTypes.LOAD_FROM_STORAGE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nexport const AppContext = /*#__PURE__*/createContext();\n\n// Context provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const savedData = localStorage.getItem('hacktrack-data');\n    if (savedData) {\n      try {\n        const parsedData = JSON.parse(savedData);\n        dispatch({\n          type: actionTypes.LOAD_FROM_STORAGE,\n          payload: parsedData\n        });\n      } catch (error) {\n        console.error('Error loading data from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    const dataToSave = {\n      user: state.user,\n      isAuthenticated: state.isAuthenticated,\n      savedEvents: state.savedEvents,\n      applications: state.applications,\n      notifications: state.notifications,\n      theme: state.theme\n    };\n    localStorage.setItem('hacktrack-data', JSON.stringify(dataToSave));\n  }, [state.user, state.savedEvents, state.applications, state.notifications, state.theme]);\n\n  // Actions\n  const setLoading = loading => {\n    dispatch({\n      type: actionTypes.SET_LOADING,\n      payload: loading\n    });\n  };\n  const login = userData => {\n    dispatch({\n      type: actionTypes.SET_USER,\n      payload: userData\n    });\n    toast.success(`Welcome back, ${userData.name}!`);\n  };\n  const logout = () => {\n    dispatch({\n      type: actionTypes.LOGOUT\n    });\n    localStorage.removeItem('hacktrack-data');\n    toast.success('Logged out successfully');\n  };\n  const saveEvent = event => {\n    if (state.savedEvents.find(saved => saved.id === event.id)) {\n      toast.error('Event already saved');\n      return;\n    }\n    dispatch({\n      type: actionTypes.SAVE_EVENT,\n      payload: event\n    });\n    toast.success('Event saved successfully');\n  };\n  const unsaveEvent = eventId => {\n    dispatch({\n      type: actionTypes.UNSAVE_EVENT,\n      payload: eventId\n    });\n    toast.success('Event removed from saved');\n  };\n  const addApplication = application => {\n    const newApplication = {\n      ...application,\n      id: Date.now().toString(),\n      appliedAt: new Date().toISOString(),\n      status: 'pending'\n    };\n    dispatch({\n      type: actionTypes.ADD_APPLICATION,\n      payload: newApplication\n    });\n    toast.success('Application submitted successfully');\n  };\n  const updateApplication = (id, updates) => {\n    dispatch({\n      type: actionTypes.UPDATE_APPLICATION,\n      payload: {\n        id,\n        updates\n      }\n    });\n  };\n  const addNotification = notification => {\n    const newNotification = {\n      ...notification,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString(),\n      read: false\n    };\n    dispatch({\n      type: actionTypes.ADD_NOTIFICATION,\n      payload: newNotification\n    });\n  };\n  const markNotificationRead = id => {\n    dispatch({\n      type: actionTypes.MARK_NOTIFICATION_READ,\n      payload: id\n    });\n  };\n  const setFilters = filters => {\n    dispatch({\n      type: actionTypes.SET_FILTERS,\n      payload: filters\n    });\n  };\n  const setSearchQuery = query => {\n    dispatch({\n      type: actionTypes.SET_SEARCH_QUERY,\n      payload: query\n    });\n  };\n  const setTheme = theme => {\n    dispatch({\n      type: actionTypes.SET_THEME,\n      payload: theme\n    });\n    document.documentElement.setAttribute('data-theme', theme);\n  };\n  const isEventSaved = eventId => {\n    return state.savedEvents.some(event => event.id === eventId);\n  };\n  const getApplicationByEventId = eventId => {\n    return state.applications.find(app => app.eventId === eventId);\n  };\n  const value = {\n    ...state,\n    setLoading,\n    login,\n    logout,\n    saveEvent,\n    unsaveEvent,\n    addApplication,\n    updateApplication,\n    addNotification,\n    markNotificationRead,\n    setFilters,\n    setSearchQuery,\n    setTheme,\n    isEventSaved,\n    getApplicationByEventId\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","toast","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","loading","savedEvents","applications","notifications","filters","category","location","dateRange","difficulty","type","searchQuery","theme","actionTypes","SET_LOADING","SET_USER","LOGOUT","SAVE_EVENT","UNSAVE_EVENT","ADD_APPLICATION","UPDATE_APPLICATION","ADD_NOTIFICATION","MARK_NOTIFICATION_READ","SET_FILTERS","SET_SEARCH_QUERY","SET_THEME","LOAD_FROM_STORAGE","appReducer","state","action","payload","filter","event","id","map","app","updates","notification","read","AppContext","AppProvider","children","_s","dispatch","savedData","localStorage","getItem","parsedData","JSON","parse","error","console","dataToSave","setItem","stringify","setLoading","login","userData","success","name","logout","removeItem","saveEvent","find","saved","unsaveEvent","eventId","addApplication","application","newApplication","Date","now","toString","appliedAt","toISOString","status","updateApplication","addNotification","newNotification","createdAt","markNotificationRead","setFilters","setSearchQuery","query","setTheme","document","documentElement","setAttribute","isEventSaved","some","getApplicationByEventId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FINAL/final year project/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  savedEvents: [],\r\n  applications: [],\r\n  notifications: [],\r\n  filters: {\r\n    category: 'all',\r\n    location: 'all',\r\n    dateRange: 'all',\r\n    difficulty: 'all',\r\n    type: 'all'\r\n  },\r\n  searchQuery: '',\r\n  theme: 'light'\r\n};\r\n\r\n// Action types\r\nconst actionTypes = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_USER: 'SET_USER',\r\n  LOGOUT: 'LOGOUT',\r\n  SAVE_EVENT: 'SAVE_EVENT',\r\n  UNSAVE_EVENT: 'UNSAVE_EVENT',\r\n  ADD_APPLICATION: 'ADD_APPLICATION',\r\n  UPDATE_APPLICATION: 'UPDATE_APPLICATION',\r\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\r\n  MARK_NOTIFICATION_READ: 'MARK_NOTIFICATION_READ',\r\n  SET_FILTERS: 'SET_FILTERS',\r\n  SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\r\n  SET_THEME: 'SET_THEME',\r\n  LOAD_FROM_STORAGE: 'LOAD_FROM_STORAGE'\r\n};\r\n\r\n// Reducer function\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_LOADING:\r\n      return { ...state, loading: action.payload };\r\n\r\n    case actionTypes.SET_USER:\r\n      return { \r\n        ...state, \r\n        user: action.payload, \r\n        isAuthenticated: !!action.payload,\r\n        loading: false \r\n      };\r\n\r\n    case actionTypes.LOGOUT:\r\n      return { \r\n        ...state, \r\n        user: null, \r\n        isAuthenticated: false,\r\n        savedEvents: [],\r\n        applications: [],\r\n        notifications: []\r\n      };\r\n\r\n    case actionTypes.SAVE_EVENT:\r\n      const savedEvents = [...state.savedEvents, action.payload];\r\n      return { ...state, savedEvents };\r\n\r\n    case actionTypes.UNSAVE_EVENT:\r\n      return { \r\n        ...state, \r\n        savedEvents: state.savedEvents.filter(event => event.id !== action.payload) \r\n      };\r\n\r\n    case actionTypes.ADD_APPLICATION:\r\n      const applications = [...state.applications, action.payload];\r\n      return { ...state, applications };\r\n\r\n    case actionTypes.UPDATE_APPLICATION:\r\n      return {\r\n        ...state,\r\n        applications: state.applications.map(app =>\r\n          app.id === action.payload.id ? { ...app, ...action.payload.updates } : app\r\n        )\r\n      };\r\n\r\n    case actionTypes.ADD_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [action.payload, ...state.notifications]\r\n      };\r\n\r\n    case actionTypes.MARK_NOTIFICATION_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notification =>\r\n          notification.id === action.payload ? { ...notification, read: true } : notification\r\n        )\r\n      };\r\n\r\n    case actionTypes.SET_FILTERS:\r\n      return { ...state, filters: { ...state.filters, ...action.payload } };\r\n\r\n    case actionTypes.SET_SEARCH_QUERY:\r\n      return { ...state, searchQuery: action.payload };\r\n\r\n    case actionTypes.SET_THEME:\r\n      return { ...state, theme: action.payload };\r\n\r\n    case actionTypes.LOAD_FROM_STORAGE:\r\n      return { ...state, ...action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nexport const AppContext = createContext();\r\n\r\n// Context provider component\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    const savedData = localStorage.getItem('hacktrack-data');\r\n    if (savedData) {\r\n      try {\r\n        const parsedData = JSON.parse(savedData);\r\n        dispatch({ type: actionTypes.LOAD_FROM_STORAGE, payload: parsedData });\r\n      } catch (error) {\r\n        console.error('Error loading data from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save data to localStorage whenever state changes\r\n  useEffect(() => {\r\n    const dataToSave = {\r\n      user: state.user,\r\n      isAuthenticated: state.isAuthenticated,\r\n      savedEvents: state.savedEvents,\r\n      applications: state.applications,\r\n      notifications: state.notifications,\r\n      theme: state.theme\r\n    };\r\n    localStorage.setItem('hacktrack-data', JSON.stringify(dataToSave));\r\n  }, [state.user, state.savedEvents, state.applications, state.notifications, state.theme]);\r\n\r\n  // Actions\r\n  const setLoading = (loading) => {\r\n    dispatch({ type: actionTypes.SET_LOADING, payload: loading });\r\n  };\r\n\r\n  const login = (userData) => {\r\n    dispatch({ type: actionTypes.SET_USER, payload: userData });\r\n    toast.success(`Welcome back, ${userData.name}!`);\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionTypes.LOGOUT });\r\n    localStorage.removeItem('hacktrack-data');\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const saveEvent = (event) => {\r\n    if (state.savedEvents.find(saved => saved.id === event.id)) {\r\n      toast.error('Event already saved');\r\n      return;\r\n    }\r\n    dispatch({ type: actionTypes.SAVE_EVENT, payload: event });\r\n    toast.success('Event saved successfully');\r\n  };\r\n\r\n  const unsaveEvent = (eventId) => {\r\n    dispatch({ type: actionTypes.UNSAVE_EVENT, payload: eventId });\r\n    toast.success('Event removed from saved');\r\n  };\r\n\r\n  const addApplication = (application) => {\r\n    const newApplication = {\r\n      ...application,\r\n      id: Date.now().toString(),\r\n      appliedAt: new Date().toISOString(),\r\n      status: 'pending'\r\n    };\r\n    dispatch({ type: actionTypes.ADD_APPLICATION, payload: newApplication });\r\n    toast.success('Application submitted successfully');\r\n  };\r\n\r\n  const updateApplication = (id, updates) => {\r\n    dispatch({ type: actionTypes.UPDATE_APPLICATION, payload: { id, updates } });\r\n  };\r\n\r\n  const addNotification = (notification) => {\r\n    const newNotification = {\r\n      ...notification,\r\n      id: Date.now().toString(),\r\n      createdAt: new Date().toISOString(),\r\n      read: false\r\n    };\r\n    dispatch({ type: actionTypes.ADD_NOTIFICATION, payload: newNotification });\r\n  };\r\n\r\n  const markNotificationRead = (id) => {\r\n    dispatch({ type: actionTypes.MARK_NOTIFICATION_READ, payload: id });\r\n  };\r\n\r\n  const setFilters = (filters) => {\r\n    dispatch({ type: actionTypes.SET_FILTERS, payload: filters });\r\n  };\r\n\r\n  const setSearchQuery = (query) => {\r\n    dispatch({ type: actionTypes.SET_SEARCH_QUERY, payload: query });\r\n  };\r\n\r\n  const setTheme = (theme) => {\r\n    dispatch({ type: actionTypes.SET_THEME, payload: theme });\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n  };\r\n\r\n  const isEventSaved = (eventId) => {\r\n    return state.savedEvents.some(event => event.id === eventId);\r\n  };\r\n\r\n  const getApplicationByEventId = (eventId) => {\r\n    return state.applications.find(app => app.eventId === eventId);\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    setLoading,\r\n    login,\r\n    logout,\r\n    saveEvent,\r\n    unsaveEvent,\r\n    addApplication,\r\n    updateApplication,\r\n    addNotification,\r\n    markNotificationRead,\r\n    setFilters,\r\n    setSearchQuery,\r\n    setTheme,\r\n    isEventSaved,\r\n    getApplicationByEventId\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}